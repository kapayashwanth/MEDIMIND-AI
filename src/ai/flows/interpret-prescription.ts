// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent that interprets medical prescriptions.
 *
 * - interpretPrescription - A function that handles the prescription interpretation process.
 * - InterpretPrescriptionInput - The input type for the interpretPrescription function.
 * - InterpretPrescriptionOutput - The return type for the interpretPrescription function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const InterpretPrescriptionInputSchema = z.object({
  prescriptionDataUri: z
    .string()
    .describe(
      "A prescription document, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type InterpretPrescriptionInput = z.infer<typeof InterpretPrescriptionInputSchema>;

const InterpretPrescriptionOutputSchema = z.object({
  medications: z.array(
    z.object({
      name: z.string().describe('The name of the medication.'),
      purpose: z.string().describe('The purpose of the medication.'),
      dosage: z.string().describe('The dosage of the medication.'),
      timing: z.string().describe('The recommended timing for intake.'),
    })
  ).describe('An array of medications and their details.'),
});
export type InterpretPrescriptionOutput = z.infer<typeof InterpretPrescriptionOutputSchema>;

export async function interpretPrescription(input: InterpretPrescriptionInput): Promise<InterpretPrescriptionOutput> {
  return interpretPrescriptionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'interpretPrescriptionPrompt',
  input: {schema: InterpretPrescriptionInputSchema},
  output: {schema: InterpretPrescriptionOutputSchema},
  prompt: `You are a medical expert specializing in interpreting prescriptions.

You will use this information from the prescription to extract details about each medication, including its name, purpose, dosage, and the recommended timing for intake.

Analyze the following prescription:

Prescription: {{media url=prescriptionDataUri}}`,
});

const interpretPrescriptionFlow = ai.defineFlow(
  {
    name: 'interpretPrescriptionFlow',
    inputSchema: InterpretPrescriptionInputSchema,
    outputSchema: InterpretPrescriptionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
